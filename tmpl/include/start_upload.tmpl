      <div class="modal fade" id="startUpload" tabindex="-1" role="dialog" aria-labelledby="startUploadTitle" aria-hidden="true"
        style="width:100% !important;overflow:auto !important;-webkit-overflow-scrolling:touch !important;">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="startUploadTitle"><mt:trans phrase="Upload"></h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
            <div class="alert alert-success hidden" id="clear-history-alert" role="alert" tabindex="0">
              <button onclick="$('#clear-history-alert').hide();" type="button" class="close" aria-label="<mt:trans phrase="Close">">
                <span aria-hidden="true">&times;</span>
              </button>
              <mt:trans phrase="The upload path history has been cleared successfully.">
            </div>
              <div class="container-fluid" id="drop-zone">
                <form>
                <span id="file-chooser" class="btn btn-success fileinput-button">
                    <span><mt:trans phrase="Select File..."></span>
                    <!-- The file input field used as target for the file upload widget -->
                    <input id="fileupload" type="file" name="files[]" multiple
                        onfocus="$('#file-chooser').css('border','2px solid green');"
                        onblur="$('#file-chooser').css('border','none');">
                </span>
              <mt:if tag="property" name="asset_overwrite">
                <label class="custom-control custom-checkbox" style="margin-top: 10px;margin-left: 7px">
                  <input type="checkbox" class="custom-control-input"
                    id="asset_overwrite" name="overwrite" value="0">
                  <span class="custom-control-indicator"></span>
                  <span class="custom-control-description"><mt:trans phrase="Overwrite files with the same path">
                </label>
                <script>
                $('#asset_overwrite').change(function(){
                    if ($(this).prop('checked')) {
                        $(this).val('1');
                    } else {
                        $(this).val('0');
                    }
                });
                </script>
              </mt:if>
                <div class="form-inline" style="margin: 10px 7px">
                  <mt:trans phrase="Upload Path">
                  <mt:if name="model_out_path">
                    <mt:var name="model_out_path" escape add_slash setvar="model_out_path">
                    <mt:setvar name="extra_path" value="$model_out_path" append="1">
                  </mt:if>
                  <input id="extra_path" type="text" style="width:200px;" class="form-control" name="extra_path" value="<mt:var name="extra_path" escape>">
                  <mt:setvar name="upload_paths" value="$extra_path" function="unshift">
                  <mt:var name="upload_paths" array_unique setvar="upload_paths">
                  <mt:count name="$upload_paths" setvar="path_cnt">
                <mt:if name="path_cnt" gt="1">
                  <div id="upload_paths-box">
                  <mt:loop name="upload_paths">
                    <mt:if name="__first__">
                    <button class="btn ml-3 btn-secondary" id="toggle-upload_path"><mt:trans phrase="Select"></button>
                    <span class="hidden" id="upload_path-wrapper">
                    <select class="form-control custom-select short" name="upload_path" id="upload_path"></mt:if>
                      <option value="<mt:var name="__value__" escape>" <mt:if name="extra_path" eq="$__value__">selected</mt:if>><mt:var name="__value__" escape></option>
                    <mt:if name="__last__"></select>
                    <button class="btn ml-0 btn-secondary btn-sm" id="clear-upload_path">  <i class="fa fa-trash" aria-hidden="true"></i><span class="sr-only"><mt:trans phrase="Clear"></span></button>
                    </span>
                  </div>
                    </mt:if>
                  </mt:loop>
                </mt:if>
                </div>
                <!-- The container for the uploaded files -->
                <div id="files" class="files"></div>
                </form>
              </div>
              <!-- The global progress bar -->
              <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary upload-cancel-button" data-dismiss="modal"><mt:trans phrase="Cancel"></button>
              <button type="submit" class="btn btn-primary new-filter-elem hidden" id="filter-apply"><mt:trans phrase="Next"></button>
            </div>
          </div>
        </div>
      </div>
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="assets/js/vendor/jquery.ui.widget.js"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="assets/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<mt:var name="query_string" regex_replace="'/&offset=[0-9]{1,}/',''" setvar="_query_string">
<mt:var name="_query_string" regex_replace="'/&deleted=1/',''" setvar="_query_string">
<mt:if name="request.dialog_view">
  <mt:var name="_query_string" regex_replace="'/&filter_params=[^&]*/',''" setvar="_query_string">
  <mt:var name="_query_string" regex_replace="'/&magic_token=[^&]*/',''" setvar="_query_string">
  <mt:var name="_query_string" regex_replace="'/&query=[^&]*/',''" setvar="_query_string">
</mt:if>
<mt:var name="_query_string" regex_replace="'/&{0,1}does_act=[0-9]{1,}/',''" setvar="_query_string">
<mt:var name="_query_string" regex_replace="'/&{0,1}apply_actions=[0-9]{1,}/',''" setvar="_query_string">
<mt:var name="_query_string" regex_replace="'/&{0,1}background_proccess_running=[0-9]{1,}/',''" setvar="_query_string">
<mt:var name="_query_string" regex_replace="'/&{0,1}html_background_proccess=1/',''" setvar="_query_string">
<mt:var name="_query_string" regex_replace="'/&+/','&'" setvar="_query_string">
<mt:var name="_query_string" regex_replace="'/^&+/',''" setvar="_query_string">
<script src="assets/js/jquery.fileupload.js"></script>
<script>
$('#upload_path').change(function(){
    $('#extra_path').val( $(this).val() );
});
$('#clear-upload_path').click(function(){
    if ( !confirm('<mt:trans phrase="Are you sure you want to delete the upload path history?">') ) {
        return false;
    }
    $.post("<mt:var name="script_uri">", {
        '__mode' : 'clear_extra_paths',
        'workspace_id' : '<mt:var name="workspace_id">',
        'magic_token': '<mt:var name="magic_token">'
    },
    function ( data ) {
        if( data.result == true ) {
            $('#upload_paths-box').hide( 300 );
            $('#clear-history-alert').show();
            $('#clear-history-alert').focus();
        } else {
            alert("<mt:trans phrase="An error occurred while clearing upload path history.">");
        }
    },
    "json"
    );
    return false;
});
$('#toggle-upload_path').click(function(){
    $('#upload_path-wrapper').toggle();
    if ( $(this).html() == '<mt:trans phrase="Select">' ) {
        $(this).html( '<mt:trans phrase="Hide">' );
        $('#upload_path-wrapper').css('display', 'inline');
    } else {
        $(this).html( '<mt:trans phrase="Select">' );
    }
    return false;
});
var this_url = '<mt:var name="script_uri">?<mt:if name="workspace_id">workspace_id=<mt:var name="workspace_id">&</mt:if><mt:var name="_query_string">&sort=id&direction=desc';
var selected_ids = [];
var upload_count = 0;
var receive_count = 0;
var DropZone = document.getElementById('drop-zone');
DropZone.addEventListener('dragover', function (event) {
    $('#drop-zone').css('background-color','#ddf');
});
DropZone.addEventListener('dragleave', function (event) {
    $('#drop-zone').css('background-color','#fff');
});
$('#drop-zone').css('border','3px dashed <mt:if name="user_control_border"><mt:var name="user_control_border" escape><mt:else>#ccc</mt:if>');
$('#drop-zone').css('margin','1px');
$('#drop-zone').css('padding','8px');
$(function () {
    'use strict';
    var url = '<mt:var name="script_uri">?__mode=upload_multi&magic_token=<mt:var name="magic_token">&workspace_id=<mt:var name="workspace_id">&model=asset&name=file<mt:if name="request.select_system_filters" eq="filter_class_image">&select_system_filters=filter_class_image</mt:if>';
    $('#fileupload').fileupload({
        url: url,
        dataType: 'json',
        dropZone: $("#drop-zone"),
        // formData: {extra_path: $('#extra_path').val()},
        add: function (e, data) {
            data.formData = {extra_path: $('#extra_path').val()<mt:if tag="property" name="asset_overwrite">, overwrite: $('#asset_overwrite').val()</mt:if>};
            data.submit();
            upload_count++;
            $("#drop-zone").hide( 'slow' );
            $('.upload-cancel-button').hide( 'slow' );
        },
        done: function (e, data) {
            $('#clear-history-alert').hide();
            if (!data.result.files) {
                var error = data.result.message;
                $('#progress .progress-bar').css(
                    'width', 0
                );
                alert("<mt:trans phrase="An error occurred while uploading.">"+' (' + error + ')');
                upload_count = 0;
                receive_count = 0;
                selected_ids = [];
                return;
            }
            $("input[name='id[]']").each(function(){
                if ( $(this).prop('checked') ) {
                    if( $.inArray($(this).val(), selected_ids ) == -1 ) {
                        selected_ids.push($(this).val());
                    }
                }
            });
            $.each(data.result.files, function (index, file) {
                // $('<p/>').text(file.name).appendTo('#files');
                var input_cb = $('#select_ids_tmpl');
                var new_input = input_cb.clone( true ).appendTo('#list-select-form');
                new_input.removeAttr('id');
                new_input.attr('name','id[]');
                new_input.val(file.asset_id);
                selected_ids.push(file.asset_id);
                receive_count++;
                //if ( upload_count == receive_count ) {
                setTimeout(uploaded_hdlr, 1000);
                //}
            });
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('#progress .progress-bar').css(
                'width',
                progress + '%'
            );
            $('#drop-zone').css('background-color','#fff');
            $("#drop-zone").show( 'slow' );
        }
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});
function uploaded_hdlr () {
    this_url += '&selected_ids=' + selected_ids.join(',');
    <mt:if name="request.insert_editor">
    $("#__mode").prop('value', 'insert_asset');
    $("#list-select-form").submit();
    <mt:else>
    submit_params_to_post( this_url );
    </mt:if>
}
</script>